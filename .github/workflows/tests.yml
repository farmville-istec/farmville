name: FarmVille Tests

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: farmville_test
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: farmville_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Set up environment variables
      run: |
        echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
        echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
        echo "POSTGRES_USER=farmville_test" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=test_password" >> $GITHUB_ENV
        echo "POSTGRES_DB=farmville_test" >> $GITHUB_ENV
        echo "JWT_SECRET=test-secret-key" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=test-key" >> $GITHUB_ENV
        echo "OPENWEATHERMAP_API_KEY=test-weather-key" >> $GITHUB_ENV

    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --tb=short --cov=. --cov-report=xml --cov-report=term
